services:
  mysql:
    image: mysql:8
    container_name: sa_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: sa_management_3afak
      MYSQL_USER: sa_user
      MYSQL_PASSWORD: sa_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-config:/etc/mysql/conf.d
    networks:
      - sa_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --max-connections=100
      --innodb-flush-log-at-trx-commit=2
      --innodb-flush-method=O_DIRECT
      --bind-address=0.0.0.0

  backend:
    build:
      context: ./sa-management
      dockerfile: Dockerfile
    container_name: sa_backend
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./sa-management:/var/www/html
      - backend_cache:/var/www/html/storage/framework/cache
      - backend_sessions:/var/www/html/storage/framework/sessions
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_DATABASE=sa_management_3afak
      - DB_USERNAME=sa_user
      - DB_PASSWORD=sa_password
      # CONFIGURATION RÉSEAU - REMPLACEZ 192.168.1.45 PAR VOTRE IP
      - APP_URL=http://192.168.1.45:8000
      - FRONTEND_URL=http://192.168.1.45:3001
      - CORS_ALLOWED_ORIGINS=http://192.168.1.45:3001,http://127.0.0.1:3001,http://192.168.1.45:3001
      - SANCTUM_STATEFUL_DOMAINS=192.168.1.45:3001,127.0.0.1:3001,192.168.1.45:3001
      - SESSION_DOMAIN=192.168.1.45
      - SESSION_SECURE_COOKIE=false
      - SESSION_SAME_SITE=lax
      # CONFIGURATION EMAIL
      - MAIL_MAILER=smtp
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USERNAME=aminatitoua342@gmail.com
      - MAIL_PASSWORD=uyohfhnnyubypanv
      - MAIL_ENCRYPTION=tls
      - MAIL_FROM_ADDRESS=aminatitoua342@gmail.com
      - MAIL_EHLO_DOMAIN=192.168.1.45
      # AUTRES CONFIGURATIONS
      - CACHE_DRIVER=file
      - SESSION_DRIVER=database
      - QUEUE_CONNECTION=database
      - DB_CONNECTION=mysql
      - LOG_CHANNEL=stack
      - LOG_LEVEL=debug
      - PHP_MEMORY_LIMIT=512M
      - PHP_MAX_EXECUTION_TIME=120
      - PHP_MAX_INPUT_TIME=120
      - PHP_POST_MAX_SIZE=50M
      - PHP_UPLOAD_MAX_FILESIZE=50M
      - NGINX_FASTCGI_READ_TIMEOUT=120
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - sa_network
    command: >
      bash -c "
        echo 'Waiting for MySQL...' &&
        sleep 15 &&
        
        if [ ! -d 'vendor' ]; then
          echo 'Installing Composer dependencies...' &&
          composer install --no-dev --optimize-autoloader --no-interaction
        fi &&
        
        if [ ! -f '.env' ]; then
          cp .env.example .env
        fi &&
        
        if ! grep -q 'APP_KEY=base64:' .env; then
          php artisan key:generate --force
        fi &&
        
        composer dump-autoload --optimize &&
        
        mkdir -p storage/logs storage/framework/cache/data storage/framework/sessions storage/framework/views storage/app/public &&
        chmod -R 775 storage bootstrap/cache &&
        
        echo 'Running migrations...' &&
        timeout 120 php artisan migrate --force &&
        
        echo 'Creating queue jobs table...' &&
        php artisan queue:table --force 2>/dev/null || echo 'Queue table exists' &&
        php artisan migrate --force &&
        
        php artisan config:clear &&
        php artisan cache:clear &&
        php artisan view:clear &&
        php artisan storage:link &&
        
        echo 'Starting Laravel server for network access...' &&
        php artisan serve --host=0.0.0.0 --port=8000
      "

  frontend:
    image: node:20-alpine
    container_name: sa_frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./sa-management-frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_build_cache:/app/.cache
    ports:
      - "0.0.0.0:3001:3001"
    environment:
      # CONFIGURATION RÉSEAU FRONTEND - REMPLACEZ 192.168.1.45 PAR VOTRE IP
      - REACT_APP_API_URL=http://192.168.1.45:8000/api
      - REACT_APP_BASE_URL=http://192.168.1.45:3001
      - HOST=0.0.0.0
      - PORT=3001
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=true
      - DISABLE_ESLINT_PLUGIN=true
      - GENERATE_SOURCEMAP=false
      - NODE_ENV=development
      - NODE_OPTIONS=--max-old-space-size=4096
      - SKIP_PREFLIGHT_CHECK=true
      - REACT_APP_API_TIMEOUT=15000
      - REACT_APP_RETRY_ATTEMPTS=3
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=3001
    networks:
      - sa_network
    depends_on:
      - backend
    command: >
      sh -c "
        echo 'Starting frontend setup for network access...' &&
        npm cache clean --force &&
        
        echo 'Installing dependencies...' &&
        if [ -f 'package-lock.json' ]; then
          npm ci --no-audit --no-fund --prefer-offline || npm install --no-audit --no-fund
        else
          npm install --no-audit --no-fund
        fi &&
        
        echo 'Starting React development server for network access...' &&
        REACT_APP_API_URL=http://192.168.1.45:8000/api HOST=0.0.0.0 npm start
      "
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
  
volumes:
  mysql_data:
    driver: local
  frontend_node_modules:
    driver: local
  frontend_build_cache:
    driver: local
  backend_cache:
    driver: local
  backend_sessions:
    driver: local
  
networks:
  sa_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16


